//
//  ShowPodcastViewController.swift
//  TopPodcasts
//
//  Created by Sander Korebrits on 17/08/2018.
//  Copyright (c) 2018 designlapp. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ShowPodcastDisplayLogic: class{
    func displayGetPodcast(viewModel: ShowPodcast.GetPodcast.ViewModel)
}

class ShowPodcastViewController: UIViewController, ShowPodcastDisplayLogic{
    var interactor: ShowPodcastBusinessLogic?
    var router: (NSObjectProtocol & ShowPodcastRoutingLogic & ShowPodcastDataPassing)?
    lazy var tableViewDatasource: ShowPodcastTableViewDatasource = {
        let datasource = ShowPodcastTableViewDatasource(tableView: self.tableView)
        return datasource
    }()
    
    // MARK: Outlets
    @IBOutlet weak var tableView: UITableView!

    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?){
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder){
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup
    private func setup(){
        let viewController = self
        let interactor = ShowPodcastInteractor()
        let presenter = ShowPodcastPresenter()
        let router = ShowPodcastRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    private func viewDidLoadSetup(){
        title = "Podcast"
        tableView.dataSource = tableViewDatasource
    }

    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?){
        if let scene = segue.identifier {
          let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
          if let router = router, router.responds(to: selector) {
            router.perform(selector, with: segue)
          }
        }
    }

    // MARK: View lifecycle
    override func viewDidLoad(){
        super.viewDidLoad()
        viewDidLoadSetup()
        getPodcast()
    }
}

// MARK: - Methods
extension ShowPodcastViewController{
    func getPodcast(){
        let request = ShowPodcast.GetPodcast.Request()
        interactor?.getPodcast(request: request)
    }
    
    func displayGetPodcast(viewModel: ShowPodcast.GetPodcast.ViewModel){
        tableViewDatasource.updateWithViewModel(viewModel: viewModel)
    }
}
