//
//  ListPodcastsInteractor.swift
//  TopPodcasts
//
//  Created by Sander Korebrits on 17/08/2018.
//  Copyright (c) 2018 designlapp. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListPodcastsBusinessLogic{
    func listPodcasts(request: ListPodcasts.ListPodcasts.Request)
    func fetchPodcastImage(request: ListPodcasts.FetchImage.Request)
}

protocol ListPodcastsDataStore{
    var podcasts: [Podcast] { get }
}

class ListPodcastsInteractor: ListPodcastsBusinessLogic, ListPodcastsDataStore{
    var presenter: ListPodcastsPresentationLogic?
    var worker: ListPodcastsWorker?
    var podcasts: [Podcast] = []
    
    func listPodcasts(request: ListPodcasts.ListPodcasts.Request){
        worker = ListPodcastsWorker()
        worker?.listPodcasts(completion: { [weak self] (success, podcasts, errorMessage) in
            if success{
                self?.podcasts = podcasts
            }
            let response = ListPodcasts.ListPodcasts.Response(podcasts: podcasts, success: success, errorMessage: errorMessage)
            self?.presenter?.presentListPodcasts(response: response)
            
        })
        
    }
    
    func fetchPodcastImage(request: ListPodcasts.FetchImage.Request) {
        worker = ListPodcastsWorker()
        let podcast = podcasts[request.row]
        worker?.fetchImageArtwork(url: podcast.artworkUrl100, completion: { [weak self] (success, image, errorMessage) in
            if success{
                self?.podcasts[request.row].artwork100Image = image
            }
            let response = ListPodcasts.FetchImage.Response(podcast: podcast, row: request.row, success: success, errorMessage: errorMessage)
            self?.presenter?.presentPodcast(response: response)
        })
    }
}
